# the following is the Preamble (and this is a line note)
#+title: How to use ORG Mode
#+author: Jonathan Gerber

* Collapsing and Expanding Headings

You can hit S-TAB to cycle *through* collapse / expand of levels

* Key Bindings

- M-ENTER inserts something at the same level
- Insert a[[https://orgmode.org][ link]] in your document by typing M-x ^org insert link
  To navigate to a link in the buffer, you can click on it now

** Inserting Tables
   
| Name  | Age | Uses Emacs |
| David |  22 | yes        |
| frank |  32 | no         |

   Once you format the first line, you can hit tab and it will reformat
   to line up the pipes
   
   - If you have bullet lists
   - You can hit  M-RETURN
   - And you will get the next line
   - If you type S-M-RETURN you will get a checkbox

*** Checkbox lists can be created with S-M-RET

- [ ] First item
- [ ] 
- [ ] 
- [ ] 
(use-package org-babel)

** Comment Block
#+begin_example
monospace
this is simply monospace. Nothing else
#+end_example

** Inserting Code Block

  #+begin_src emacs-lisp
    (defun my-lisp-func ()
      (message "Hello!"))
  #+end_src

  NB. In order to get highlighting and formattting while you type, you must first create the begin and end src tags
  
* You can define python and run org babel

You can press C-c C-c with the mouse in the block to execute this

You can also display the results of code snippet execution
- On the /begin/ line. after the named language, add /:results/ followed by either /output/ or /value/
  - In hte case of /output/ a subsequent #+RESULTS will display any values sent to stdout
  - In the case of /value/ a subsequent #+RESULTS will display any value returned from the code 
    
#+begin_src python :results output
  def greeting():
    return ("Hello!")

  print (greeting())
#+end_src

#+RESULTS:
: Hello!
* Structure Templates for Org Mode
- you can create templates for these code blocks and then expand them out by typing '<' plus the hame of the template
  
  #+begin_src emacs-lisp

    ;; this is needed as of Org 0.2
    (require 'org-tempo)

    (add-to-list 'org-structure-template-alist '("sh" . "src shell"))
    (add-to-list 'org-structure-template-alist '("el" . "src emacs-lisp"))
    (add-to-list 'org-structure-template-alist '("py" . "src python"))
    
  #+end_src
 
* Babel Information
[[https://orgmod.org/worg/org-contrib/babel/]]
[[https://orgmode.org/worg/org-contrib/babel/languages.html]]
  
this is just a test to see if the auto tangle works
